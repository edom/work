apply plugin: 'java'

sourceCompatibility = '1.8'

apply plugin: 'idea'

subprojects {

    group = 'com.spacetimecat.web'
    version = '0.0.0-SNAPSHOT'

    repositories {
        mavenLocal()
        jcenter()
    }

    apply plugin: 'java'

    sourceCompatibility = '1.8'

    apply plugin: 'idea'

    apply plugin: 'maven'

}

apply plugin: 'maven'

// We wrote the 'generatePom' task because the POMs generated by the Maven plugin is not
// complete enough to be used for building the project from source with Maven.

task generatePom {
    doLast {
        pom {
            project {
                groupId 'com.spacetimecat'
                artifactId 'everything'
                version '0.0.0-SNAPSHOT'
                packaging 'pom'
                modules {
                    rootProject.subprojects.each { p ->
                        module rootProject.relativeProjectPath(p.path).replace(':', '/')
                    }
                }
            }
        }.withXml({
            // Exclude the Gradle plugin that refuses to be built with Maven.
            asNode().modules.module.each() {
                if (it.text().matches('java-build/plugin/gradle')) {
                    it.parent().remove(it)
                }
            }
        }).writeTo('pom.xml')
    }
}

javadoc.options.stylesheetFile = new File('javadoc.css')
javadoc.options.links('http://docs.oracle.com/javase/8/docs/api/')
subprojects {
    rootProject.javadoc.classpath.add(javadoc.classpath)
    rootProject.javadoc.source(javadoc.source)
}

project('concurrent') {
    allprojects {
        group = 'com.spacetimecat.concurrent'
        version = '0.0.0-SNAPSHOT'
    }
    project('lock') {
        dependencies {
            compile project(':java-lang')
        }
    }
    project('lock-client') {
        dependencies {
            compile project(':concurrent:lock-network')
            compile "ch.qos.logback:logback-classic:1.1.7"
            compile "org.slf4j:slf4j-api:1.7.21"
        }
    }
    project('lock-example') {
        dependencies {
            compile project(':concurrent:lock-client')
            compile project(':concurrent:lock-server')
        }
    }
    project('lock-network') {
        dependencies {
            compile project(':concurrent:lock')
            compile project(':server')
        }
    }
    project('lock-server') {
        dependencies {
            compile project(':concurrent:lock-network')
            compile "ch.qos.logback:logback-classic:1.1.7"
            compile "org.slf4j:slf4j-api:1.7.21"
        }
        apply plugin: 'application'
        mainClassName = 'com.spacetimecat.concurrent.lock.example.ExampleServerMain'
    }
}

project('io') {
    group = 'com.spacetimecat.io'
    version = '0.0.0-SNAPSHOT'
}

project('java-build') {

    group = "com.spacetimecat.build"
    version = '0.0.0-SNAPSHOT'

    dependencies {
        compile project(':java-lang')
    }

    project('plugin') {

        group = "${parent.group}.plugin"
        version = parent.version

        project('gradle') {

            group = "${parent.group}.gradle"
            version = '0.0.0-SNAPSHOT'

            dependencies {
                compile project(':java-build')
                compile gradleApi()
            }

        }
    }
}

project('java-lang') {
    group = 'com.spacetimecat.java.lang'
    version = '0.0.0-SNAPSHOT'
}

project('relational') {
    group = 'com.spacetimecat.relational'
    version = '0.0.0-SNAPSHOT'
    dependencies {
        compile 'com.h2database:h2:1.4.193'
        compile 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final'
    }
}

project('server') {
    group = 'com.spacetimecat.server'
    version = '0.0.0-SNAPSHOT'
    dependencies {
        compile project(':io')
    }
}

project('web-all') {
    group = 'com.spacetimecat.web'
    version = '0.0.0-SNAPSHOT'
    dependencies {
        compile project(':io')
        compile parent.project('web-http')
        compile parent.project('web-http-server')
        compile parent.project('web-server')
        compile parent.project('web-servlet')
        compile parent.project('web-servlet-json')
        compile parent.project('web-view')
    }
}

project('web-example') {
    group = 'com.spacetimecat.web'
    version = '0.0.0-SNAPSHOT'
    dependencies {
        compile parent.project('web-all')
    }
}

project('web-example-http-server') {
    group = 'com.spacetimecat.web'
    version = '0.0.0-SNAPSHOT'
    dependencies {
        compile parent.project('web-http-server')
    }
}

project('web-example-json-api') {
    group = 'com.spacetimecat.web'
    version = '0.0.0-SNAPSHOT'
    dependencies {
        compile parent.project('web-all')
    }
}

project('web-http') {
    group = 'com.spacetimecat.web'
    version = '0.0.0-SNAPSHOT'
    dependencies {
        compile project(':io')
    }
}

project('web-http-server') {
    group = 'com.spacetimecat.web'
    version = '0.0.0-SNAPSHOT'
    dependencies {
        compile project(':server')
        compile parent.project('web-http')
    }
}

project('web-server') {
    group = 'com.spacetimecat.web'
    version = '0.0.0-SNAPSHOT'
    dependencies {
        def jettyVersion = "[9,10["
        compile "org.eclipse.jetty:jetty-server:${jettyVersion}"
        compile "org.eclipse.jetty:jetty-servlet:${jettyVersion}"
    }
}

project('web-servlet') {
    group = 'com.spacetimecat.web'
    version = '0.0.0-SNAPSHOT'
    dependencies {
        compile parent.project('web-http')
        compile "javax.servlet:javax.servlet-api:[3.1,4["
    }
}

project('web-servlet-json') {
    group = 'com.spacetimecat.web'
    version = '0.0.0-SNAPSHOT'
    dependencies {
        compile parent.project('web-servlet')
        compile "org.glassfish:javax.json:[1,2["
    }
}

project('web-view') {
    group = 'com.spacetimecat.web'
    version = '0.0.0-SNAPSHOT'
    dependencies {
        compile "org.jsoup:jsoup:[1.7,2["
    }
}
