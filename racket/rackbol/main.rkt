#lang racket/base

;;  --------------------    A business-oriented language.
;;
;;  A CRUD-Web-application-oriented language.

;;  --------------------    Reader for #lang rackbol.

(module reader syntax/module-reader rackbol)

;;  --------------------    Common Rackbol bindings.
;;
;;  All bindings from private/library.rkt are available in all Rackbol programs.

(require "private/library.rkt")
(provide (all-from-out "private/library.rkt"))

;;  --------------------    Custom #%module-begin.

(require (for-syntax syntax/strip-context))
(provide
    (except-out (all-from-out racket/base)
        #%module-begin
    )
    (rename-out
        (k_module_begin #%module-begin)
    )
)

(define-syntax (k_module_begin stx)
    (define _src (syntax-source stx))
    (define source (if _src (path->string _src) "<unknown source>"))
    (syntax-case stx ()
        [(_ Body ...)
            #`(#%module-begin

                ;;  Generate operation console from Rackbol program.

                (require
                    "private/library.rkt"
                    "private/operation.rkt"
                )

                ;;  It is possible that our reserved identifiers clash with the user's identifiers.

                (provide
                    (all-from-out "private/operation.rkt")

                    ;;  For read-eval-print-loop.

                    main
                    #%app
                    #%top-interaction
                )

                ;;  The implementation is generated by expanding the user's model.

                Body ...

                ;;  Interaction.

                (require
                    "private/readline.rkt"
                    racket/pretty
                )

                (define (main)
                    (greet)
                    (parameterize ([current-print pretty-print])
                        (read-eval-print-loop)
                    )
                )

                (define (greet)
                    ;;  See private/readline.rkt for details.
                    (unless (terminal-port? (get-original-stdin))
                        (displayln "Warning: Standard input is not a terminal. This may confuse subprocesses."))
                    (printf "Welcome to the Rackbol operation console for ~a.~n" #,source)
                    (displayln #<<END_OF_GREETINGS
For help, type (help) and press Enter.
To quit, press Ctrl+D.
END_OF_GREETINGS
                    ))
            )   ;;  #%module-begin
        ]))
