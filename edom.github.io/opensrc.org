#+TITLE: Making contributable open-source projects
#+DATE: 2018-07-24 15:00 +0700
#+PERMALINK: /opensrc.html
* Some problems
- Marketing problem: People don't even know the project exists.
- Onboarding problem: People want to contribute to the project, but the project's README doesn't have clear instructions.
* How people can contribute (it doesn't have to be code only)
- Report issues.
- Help troubleshoot issues.
- Contribute code.
- Write documentation.
- Request features.
  Find things to do.
  Write proposals.
  Discuss proposals.
- Spread the word in online forums.
- Help onboard newcomers.

https://opensource.com/life/16/1/8-ways-contribute-open-source-without-writing-code
* What?
- To improve contributability, open source projects should be standardized, and documents should be written to help the user accomplish a task, not to merely describe something.
- Documentation should be task-oriented.
- The non-software part is important too.
- 2000, article, "A Case Study of Open Source Software Development: The Apache Server", [[http://herbsleb.org/web-pubs/pdfs/mockus-acase-2000.pdf][pdf]]
- 2017, article, "Understanding the Impressions, Motivations, and Barriers of One Time Code Contributors to FLOSS Projects: A Survey", [[http://carver.cs.ua.edu/Papers/Conference/2017/ICSE_OTC.pdf][pdf]]
- If you want to attract people, you must have a goal/vision/roadmap.

  - You will attract people with the same goal.
  - If their goal changes, they will leave you, and that's OK.

- Your project must have a readme and a contributor guidelines.

  - https://help.github.com/articles/setting-guidelines-for-repository-contributors/
  - Make it easy for people to contribute.

- Maintaining open source projects

  - [[https://github.com/nayafia/awesome-maintainers][nayafia/awesome-maintainers: Talks, blog posts, and interviews about the experience of being an open source maintainer]]
  - [[https://staltz.com/open-source-without-maintainers.html][André Staltz - Open source without maintainers]]
  - [[https://opensource.guide/best-practices/][Best Practices for Maintainers - Open Source Guides]]

- [[https://www.theinquirer.net/inquirer/feature/3013459/how-open-source-took-over-the-world][How open source took over the world]]
- 2010, article, "Sustainability of Free/Libre Open Source Projects: A Longitudinal Study", [[https://pdfs.semanticscholar.org/934e/0e87df10ca51138e3fe857a2de216787cbef.pdf][pdf]]
- [[https://opensource.org/osd][The Open Source Definition - Open Source Initiative]]

  - "Open source doesn't just mean access to the source code."

- open source development methodology

  - [[https://medium.com/@pocztarski/shame-driven-development-4545fae46fd][Shame-driven development -- Rafał Pocztarski -- Medium]]
* Maintaining open-source projects
Be a benevolent dictator.
Don't be democratic.
Be decisive without being offensive.
Skip the swearing.
Don't put your words in other people's mouths.
Avoid statements whose subject is "you", such as "you are ...", "you said ...", "you want ...", "you think ...".

When you don't want something, you can just say "No", repeatedly if necessary.
You don't have to explain why.
You have the final say.
Not everything is open to discussion.

Democracy doesn't work in open source.
Most people are lazy, polite, selfish, short-term-oriented, impatient, and incompetent.

If you are democratic, you will waste your time convincing people who won't be convinced anyway.
People who already understand don't need to be convinced.
People who don't understand will never be convinced.

If you are permissive, your codebase will degrade into a pile full of half-done half-assed workarounds.

Tolerate no mediocrity.
Tolerate no misspelling.
Reject incomprehensible commits.
Demand the absolute best.
Never lower the bar.
It's better to receive no contribution at all than let a shitty contributor in.
Working code is not enough.
The code should also be correct.

If you receive an almost good contribution, either you fix it, or you reject it.

Reject incompetent people.

Get out of the way of competent people.
Don't distract them from doing their job.

If you want to leave the project, appoint a replacement dictator?

Contributors may often have IQ above 130, but IQ doesn't meant competent.
Higher IQ only means faster learning; that's all.
