#+TITLE: Meta-research
#+DATE: 2017-05-25 01:00:00 +0700
#+PERMALINK: /meta.html
* How do we make questions that lead to knowledge creation?
<2019-08-17>

- The words in the question must mean the same to all people.
- The question has to be answerable in principle.
- The question has to be asked to someone who can answer it.

We can approximate the significance of a question, and thus the significance of its answer, without knowing the answer.
* What makes a question hard?
Any combination of these:
- It is unanswerable.
  It is unknowable.
  It is epistemologically impossible to answer.
- Its answer's search space is big.
- It requires much background knowledge to understand, let alone to answer.

A question (a query) is a logical formula.
Each logical formula has an /inherent/ difficulty.
This is studied by /descriptive complexity theory/, a branch of /computational complexity theory/.
* Organization of this wiki
** Article categories
Each article in this wiki belongs to one of these categories:
- survey (What exists? What is the state of...)
- argument (We should...)
- exploration (What if...); borderline ramble
- record/logging/memory/notes (What happened when?)
- rant/complaint/ramble/babble/sketch

A mature exploration should become an argument.

I record the evil and the incompetencies, of people, corporations, and systems.
** Article structure
The title is a goal.

The content is the ongoing journey to achieve it.

Each article in this site is a living document.
* Meta-thinking
** When stuck, ask yourself...
When you're stuck, ask yourself "What question do I have to ask myself in order to get me unstuck?"
** When stuck on a question, convert it into a hypothesis
Every question can be turned into a hypothesis.
Therefore, don't ask.
Instead, hypothesize, and find evidences for or against.

What is this:
The value of asking questions
https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3596240/
** How to categorize
Suppose we want to categorize T (a set of things) to C (a set of categories).

A good categorization is:
- complete/exhaustive: every item belongs to a category
- disjoint (non-overlapping): every item belongs to exactly one category
- similar-sized: each category contains about the same number of items

https://webdesign.tutsplus.com/articles/the-art-of-structuring-information-effectively--webdesign-6807
** Neil Kakkar's algorithm list for common problems
Are those algorithms optimal?[fn::https://neilkakkar.com/Algorithms-to-live-by.html]
* I think I have stopped caring about these
** Fonts
<2018-07-21>
Wikipedia uses 14px (about 10.5pt).

Why is the font so big?
Because I'm myopic.

Why is the font so small?
To fit more information on screen.

To shrink the text, press Control-minus.

To expand the text, press Control-plus.

I read smaller text faster because my eyes move less, until the font size reaches 8pt.
The screen pixels aren't dense enough to render 8pt sans-serif.
** Problem: can't infer last modified date of files in a Git repository?
This affects Google crawl?
- Yes.
  - https://www.sitemaps.org/protocol.html
    - sitemap.xml lastmod is optional but
      "This incremental Sitemap fetching mechanism allows for the rapid discovery of new URLs on very large sites."
- No.
  - https://webmasters.stackexchange.com/questions/25833/does-google-penalize-daily-updated-lastmod-tags-in-sitemaps-if-the-data-is-not
    - "The lastmod tag is optional in sitmaps and in most of the cases it's ignored by search engines,
      because webmasters are doing a horrible job keeping it accurate."

Solution candidates:
- Manually update lastmod every time we edit an md file
- Write a script to update lastmod in each md file
  - all files, or only those in a commit?
  - https://serverfault.com/questions/401437/how-to-retrieve-the-last-modification-date-of-all-files-in-a-git-repository
  - https://stackoverflow.com/questions/14141344/git-status-list-last-modified-date
  - https://hackerific.net/2016/04/30/git-file-age-a-script-to-show-when-files-were-last-modified-in-git/
- Stay in Jekyll, modify sitemap generator
  - https://github.com/gjtorikian/jekyll-last-modified-at
    - not compatible with github pages https://github.com/gjtorikian/jekyll-last-modified-at/issues/32
  - https://stackoverflow.com/questions/14978474/how-to-show-the-modification-date-of-a-file-in-jekyll
  - https://milanaryal.com.np/jekyll-site-last-modified-time/
- Generate sitemap.xml outside Jekyll
- Run Jekyll locally, commit output html to github
* What
** How should we order or group questions in this website?
Why do we group questions?
Because everyone has narrow and different interests.
Everything that does not interest us is noise to us, that we filter out.
We care about some truth, but we do not have time for all truth.
One who cares about a question is likely to also care about related questions.

What properties should the ordering have?
The ordering should be natural and meaningful to the reader.
The ordering should help the reader understand the content.
The ordering should promote the fastest possible learning.

By Bloom's taxonomy: remembering, understanding, transferring, relating, creating, judging?[fn::http://faculty.academyart.edu/faculty/teaching-topics/teaching-curriculum/enhancing-teacher-student-interaction/different-types-questions-blooms-taxonomy.html]
Similar to Fraenkel's taxonomy[fn::https://www.slideshare.net/jrbt2014/fraenkels-taxonomy-of-question]?

By hardship?
By the time I spent looking for answers?

By importance?
From survival questions, to fun questions?

Close-ended vs open-ended?

By number of answers: zero, one, many?

Logical/mental/ideal (whose truth is self-contained, that is, requires only logic and no reality) vs physical/material (whose truth depends on reality)?

By nature: argument, exploration?

By probability of an average person being interested?
By relevance to the general population?

By inspiringness, from the most inspiring?
But this ordering is not timeless?

The information literacy tutorial[fn::http://camellia.shc.edu/literacy/index.html]
** How do we do research?
How do we [[file:research.html][research]]?
How should we?
Who should we know?
Where should we go?
Where should we write?

Good researchers define the topic and formulating a strong and precise thesis statement.
They define which questions need to be explored and answered.
They use terms that work within the structures of the library and its online information systems.
 [fn::http://camellia.shc.edu/literacy/tablesversion/lessons/lesson3/defining.htm]
** How should we organize this website?
By questions that we want to answer?

By goals that we want to achieve (currently-false statements that we want to make true)?
** What is the difference between important and urgent?
Something is important if not doing it is fatal.
Breathing, eating, drinking water.
Having some in-demand high-paying skills.
Being useful.

Something is urgent if it urges you to do it, if you feel an urge (strong desire) to do it.
Eating sugar, fucking, shitting.
** WebCite? ResearchGate? Switzerland?
Should we use WebCite[fn::https://www.webcitation.org/] for permalinking?
Should we embrace change instead?

How should we use ResearchGate[fn::https://www.researchgate.net/]?

JÃ¼rgen Schmidhuber: "Switzerland is the world's leading science nation."
 [fn::http://people.idsia.ch/~juergen/erc2017.html]
 [fn::http://people.idsia.ch/~juergen/switzerland.html]
** Intellectual laziness
From "Thinking Tools To Enhance Your Life" Chapter 3[fn::https://westsidetoastmasters.com/resources/thinking_tools/ch03.html]:
#+BEGIN_QUOTE
Most people have more physical perseverance than intellectual perseverance.
Most are ready to admit, "No pain, no gain!" when talking about the body.
Most give up quickly, on the other hand, when faced with a frustrating intellectual problem.
#+END_QUOTE
** What
Principle:
Who you are does not matter. What matter is what you do.

Patrick Collison's interesting questions
https://patrickcollison.com/questions

* How should we meet?
This is the way we should meet.
Ban small talk.
Impose some but minimal structure.
See Marcel Schwantes article[fn::https://www.inc.com/marcel-schwantes/13-genius-questions-most-interesting-people-ask-to-start-great-conversations.html].
* Self-research
PhD interview questions[fn::https://www.findaphd.com/advice/finding/phd-interview-questions.aspx][fn::https://academia.stackexchange.com/questions/101803/answering-the-why-do-you-want-to-do-a-phd-question]
** What are my strengths?
I try to be rational.
I readily change my beliefs when I find conflicting evidences.
** What are my weaknesses?
I have a bad relationship with time.
I have difficulty sleeping and waking up.
I disregard deadlines.
I'm slow.
I suck at races.

I don't act without reason.
I am prone to overthinking.
I am selfish and stubborn.
I see things from my point of view.
It takes a lot of effort to convince me.
I should not be put in a team that I do not believe in.
I will not do what I don't believe is important for my goal.
You will find me useless when you want me to do something that I don't believe is important for my goal, no matter how important it is to you;
in such situation I will be totally uncooperative.
I don't pretend to care.

I am non-conformist.
I put reason above norms, conventions, and authorities.
I hate ceremonies.
I risk making cultural mistakes.
My candid may offend people.

I'm bad at socializing, but I'm trying to change this.
I suck at caring.
I suck at pretending to care.
I'm learning to be the first to greet.

I hate crowds.
I'm afraid to be in crowds.
I'm paranoid and untrusting.

I am not loyal.

I have strong opinions on everything.
** What am I no longer interested in?
I occasionally played weiqi[fn::Weiqi is also known as go, igo, baduk. https://en.wikipedia.org/wiki/Go_(game)],
but after AlphaGo[fn::https://en.wikipedia.org/wiki/AlphaGo] beat[fn::https://en.wikipedia.org/wiki/AlphaGo_versus_Lee_Sedol] Lee Sedol, I abandoned weiqi and never looked back.
I occasionally played chess, before Deep Blue beat Kasparov[fn::https://en.wikipedia.org/wiki/Deep_Blue_versus_Garry_Kasparov].
I occasionally played poker, before machines took over[fn::https://www.theguardian.com/technology/2017/jan/30/libratus-poker-artificial-intelligence-professional-human-players-competition].
Now I think that games only waste time:
I see no point in doing something that machines can do better than I do.
** What musical instruments do I play?
I played piano in the band [[file:nomads.html][The Nomads]] (an Indonesian band, not the Swedish band).
However, I quit being a performer on 2018-12-23, less than a year after joining the band, because I hate inhaling cigarette smoke in venues and I hate carrying pianos to venues.
I am no longer a pianist.
I am now a composer with an asset mindset.
** What things do I find entertaining?
I collect [[file:entertain.html][entertainments found on the Internet]].

Why are lyrebirds entertaining?
Lyrebird can mimic sounds uncannily.
Laser guns, drills, hammers, camera shutters.
* Why research research?
Multiply our efforts.

Reduce waste.

Avoid disappointment.
* Collaborative summarization?
Like wikipedia but original research
Like wikipedia but for graduate-level learning
* Knowing more vs organizing better
Does a smarter person know more, or organizes knowledge better?

Organizing knowledge produces some knowledge?
* The root cause of clutter
Clutter is caused by lack of consideration for the future self.

We can empathize with others.
How can we empathize with our future selves?
If there is one person that you have to be most kind to, it is your future self.

"Self-Control Is Just Empathy With Your Future Self"
"The same part of the brain that allows us to step into the shoes of others also helps us restrain ourselves."
https://www.theatlantic.com/science/archive/2016/12/self-control-is-just-empathy-with-a-future-you/509726/

Simultaneously feeling:
- grateful to your past self for making good decisions
- respectful to your future self for giving good directions

Your future self does not exist.
Neither does your past self.
Everything only exists in the present.
We can't step into the same river twice, said Heraclitus.
It's a mind trick.

File management rules:
- If a file system object is under any of these paths, then it can be deleted at any time:
  - $HOME/Downloads
  - $HOME/Desktop
  - everything not in $HOME
- Otherwise, if a file system object is under any of these paths, then it must be backed up:
  - $HOME

Value your future self.
You are cursing your past self.
Your future self is cursing your present self.
Avoid regret.
Laziness vs fear.
Present laziness vs future laziness.
Do things so that you can be lazy in the future.
Make decisions that enable you to be lazy in the future?

There is correlation:
- cluttered files
- making decisions that your future self regrets

Decluttering files:
Separate into three root directories:
- should be backed up, and fatal if lost (because you made it).
- should be backed up, but not fatal if lost (because it is hard to find, or because it may disappear from the Internet).
- should not be backed up (because it is trivial to generate, or because it is temporary). Example: ~/Downloads.

The layout inside each category is not important; you can always change it.
The important thing is that everything is in somewhere of those three categories.

Marie Kondo's "spark joy" test.
But it has sparked some backlash.

Swedish death cleaning "dÃ¶stadning".
* Should we learn things depth-first, breadth-first, or how?
Suppose that we want to learn physics.
We go to the Wikipedia article.
We have several choices:
- breadth-first: physics, branches of physics, history of physics, theoretical physics, experimental physics, mechanics, optics, electromagnetism, etc;
- depth-first: physics, classical physics, Newtonian mechanics, statics, Archimedes's law;
- random: ...

That is, we should dive into the ocean of knowledge, not surf it.

DFS requires less memory than BFS.
For humans, this means that DFS requires us to juggle less context.
That is, DFS is easier on the working memory.
For humans to integrate knowledge or create knowledge, all the relevant parts have to be in their working memory, which is very limited.
Therefore, humans should learn things /depth-first/?

PhD is deep and narrow.

Depth-limited search.

Iterative deepening.

Slava Shpitalny's "80 percent studying"[fn::https://medium.com/@slavik57/bfs-dfs-and-80ps-ways-of-learning-20f3483d7ebd]

A-star learning[fn::http://wiki.c2.com/?BreadthFirstLearning]

Depth First Learning: Learning to Understand Machine Learning[fn::https://pdfs.semanticscholar.org/edea/ce186bf065b8905f4a4867a333b0f63bfad8.pdf]

TempleOS[fn::http://www.codersnotes.com/notes/a-constructive-look-at-templeos/] markup language is interesting, but HolyC is too low-level.
* Meta-thoughts
** When stuck with a question...
When stuck with a question, syntactically transform it into a hypothesis, and gather evidences both for and against
** Similar people
If someone you like comes to a meetup, there is some chance that you are going to like that meetup.

Similar people act as an information filter.
If you are interested in person A, and person A is interested in thing B, then there is some chance that B is not shitty.

How to live: go to events attended by people similar to you?

But isn't a monoculture bad?
Doesn't it breed intolerance, polarization, and extremism?
** Invention process
- Come up with an idea.
- Make it work.
  Do the simplest thing that could possibly work.
  Do not worry about speed or resource leaks.
- Make it fast.
** What is a groundbreaking research?
A research paper that convinces the reader to see something common from a new uncommon point of view.
After some time, the new point of view then becomes common.
A research that unlocks the next researches.
Paradigm shift a la Thomas Kuhn.
** "What if your solution created the problem in the first place?"
From an article of the same title by Caterina Kostoula[fn::https://medium.com/the-mission/what-if-your-solution-created-the-problem-in-the-first-place-475c35664721]:
"You think your boss does not like you.
Your solution is to avoid him.
Because you avoid him, he starts not liking you for real."
* Experts ask specific questions
A beginner asks questions like "What is logic programming?"

An expert asks questions like "How should we add scoping to Prolog?"

Question specificity increases with expertise.

To be an expert, go deep, not broad.
* What is "What is" questions?
Sometimes, when we ask about what something is,
we do not mean to ask what it really is,
but we are actually asking one of these:
- Why does it exist?
- How can I use it?

Thus, sometimes "what is it" does not ask about the /essence/ of something, but about an /explanation/ for something.
Thus, "what" questions are often /teleological/ rather than /ontological/.

Our understanding is mostly teleological and not ontological.
We understand things in terms of how we can use them.
Scientists try to understand things in terms of what they actually are physically.

Engineers are concerned with teleology.
Scientists are concerned with ontology.

I find in "whatisthisthing" reddit[fn::https://www.reddit.com/r/whatisthisthing/] some evidence for my argument.

But that subreddit also contains an example when we really ask what something is:
"What exactly is this airplane"[fn::https://www.reddit.com/r/whatisthisthing/comments/bao335/what_exactly_is_this_airplane/]
does ask about what the model is, and not why that airplane comes into being.
* The problem with academic papers
They look like show-offs of useless knowledge.

They fail to answer "Who should care, and why should they care?"

They fail to justify their own existence.

They are incentivized to be broken.
* Learning by examples
From "Making Badass Developers - Kathy Sierra (Serious Pony) keynote"[fn::https://www.youtube.com/watch?v=FKTxC9pl-WM]:
- 21:52 build a big library of small, diverse, excellent examples
* Search engines
I use Google Scholar to get bibtex-formatted references.
It has a convenient copy-pasteable bibtex export.

Semantic Scholar?

Omnity?

"Omnity is best for students and researchers who are looking for in-depth information or for obscure information thatâs unlikely to show up in search engines that rank pages for common keywords and incoming links. For those interested in giving the search engine a whirl, Omnity is now free and open to the public."
https://www.digitaltrends.com/computing/omnity-semantic-mapping-search-engine-now-free/
* Information architecture
From dubberly.com[fn::http://www.dubberly.com/articles/using-concept-maps-in-product-development.html]:
#+BEGIN_QUOTE
The main question that we faced was this:
How should we organize java.sun.com?
What should the information architecture be?
Answering these questions was not trivial, since the site contained more than 110,000 pages.
It couldnât be reorganized by simply reading a few pages and moving them around.
What we needed was a deep understanding of Javaâwhat it is, how itâs used, how it changes, and why it matters.
#+END_QUOTE
* On best practices
We should not teach best practices[fn::https://github.com/i0natan/nodebestpractices],
but we should teach /how to think/ that leads to the best practices.

We can read 100 books and still be dumb.
Or, we can start with the right first principles,
and derive those books as the consequences of those principles.
* Counter-intuitive truths
Abraham Wald aircraft armor story[fn::https://www.quora.com/What-are-the-basic-math-skills-that-everyone-should-know/answer/Nipun-Ramakrishnan]
* Backward planning
Backward planning is to begin with the desired goal, and go backwards toward reality.
The advantage is that we never lose sight of why we are doing something.
The disadvantage is that the plan is very fickle,
because the future is unpredictable.
However, an approximate answer to the right question
is better than an exact answer to the wrong question.[fn::https://en.wikiquote.org/wiki/John_Tukey]
Also, planning is more important than fixed plans
which are easily invalidated by rapidly changing circumstances.[fn::https://quoteinvestigator.com/2017/11/18/planning/]

Planning is fun.

Planning is more fun than execution.
When we plan, we imagine wonderful things.
In execution there is toil.
* Bibliography
