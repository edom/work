#+TITLE: Erik Dominikus Research Group
#+DATE: 2017-05-20 00:00:00 +0700
#+PERMALINK: /index.html
#+MATHJAX: true
#+OPTIONS: ^:nil
* About the group and this website
** What is in this website?
This website contains questions that we think should be answered.

This page (the home page) can be thought as a table of contents.
** Who are the group members?
- Erik Dominikus

We are not a formal organization.
We are just a bunch of people who think similarly,
and we don't know what to call ourselves.
The group may change name later.
** Who is Erik Dominikus?
I am an independent[fn::https://en.wikipedia.org/wiki/Independent_scientist] researcher from Indonesia,
with too many interests, mostly theoretical,
because theoretical research is low-cost and can be done at home[fn::https://en.wikipedia.org/wiki/Armchair_theorizing],
because I don't have the resources for experimental research.
Most of my writings involve applied analytic philosophy, mathematics, and computers.
(Applied analytic philosophy is the careful usage of words to discover the essence of things.)

My last formal education degree, if you care, is a Sarjana Ilmu Komputer[fn::https://en.wikipedia.org/wiki/Bachelor_of_Computer_Science] degree bestowed in 2011 by the
Fakultas Ilmu Komputer[fn::https://www.cs.ui.ac.id/] of Universitas Indonesia[fn::https://www.ui.ac.id/] for four years of undergraduate education.
** What are the group's goals?
See the later sections describing the subgroups.
We are not confident that we can achieve those goals, but we think those goals are worthy of pursuit.
** Is the group for profit?
No.
We are for truth and meaning, not for profit.
** Disclaimers
/We may err./
Read cautiously.
Compare with other independent sources.
Do not trust us without thinking for yourself.
Use your own judgement.

/We are not responsible for what other people write in their comments,/ but we can remove comments from our website.
People are free to say whatever they want, and people are free to disagree with whatever others say,
as long as they do that in a civilized manner.

/We may change./
We are not attached to our beliefs.
Things we wrote in the past should not be solely used to judge our present self.

Most pages are messy drafts.
URLs may change.

If you have good eyesight, you may want to zoom out by pressing Control-minus.
The fonts may be too big.
* Philosophy Research Group
We provide philosophical foundations for the other groups.
** Language Research Group
*** What is a language?
We have to define "language" for the Programming System Research Group.
A programming language is a language that is used for programming.
What is a language?

In the 13th century, "language" means "words, what is said, conversation, talk".[fn::https://www.etymonline.com/word/language]

Language is a means of communication.

Language is a set of mutually agreed symbols.

Language contains logic.

Is being a language objective or subjective (teleological)?
A symbol does not have meaning on its own; someone has to interpret it.

Some animals may have languages.[fn::https://en.wikipedia.org/wiki/Animal_language].

A language constructs symbols by computable/finite means.

A language is a convention for encoding/decoding/representing meaning.

What is English? It depends on when.
Middle English was English.
What people in 1400 call "English" and what people in 2000 call "Middle English" is the same thing.
https://en.wikipedia.org/wiki/Middle_English

In order to understand an old text, we have to interpret it as its writer did.

If we are to help future generations, we must resist changing our languages.
We must resist adding or changing the definitions of words.

"Meaning of a word" is meaningless?
A word alone does not have meaning.
We interpret a word into a meaning depending on context/situation.

What do we mean by "X means Y"?
*** Semantics, semiotics, linguistics, confusion
Jake Mitchell pointed out[fn::https://twitter.com/mekajfire/status/1090689517701349376]
that there are a lot of confusing pair of terms in philosophy:
sense and reference, signifier and signified, use-mention distinction, concept and object.
*** How did the first translator translate?
*** What can language pedagogy teach us about programming language design and pedagogy?
How do we learn languages?

How do we learn second languages?

Spaced repetition, constant usage, total immersion.

Gegg 1995 \cite{gegg1995representing} (emphasis ours):
"The key difference between experts and novices is not the size of their memory span, but rather their ability to /chunk/ information together into meaningful units.
Schemata provide a method of organizing meaningful information about complex domains.
Experts have more and better problem schemata than novices.
Novice programmers tend to categorize problems based on surface syntax-based features of the problem statement,
while experts categorized problems with respect to a more abstract hierarchical organization of algorithms [...]."
*** Logic, truth
What is truth?
Truth is what is true.

What is true?
"True" is real, factual, in line with reality.

An /open formula/ is a formula that has one or more free variables.[fn::https://en.wikipedia.org/wiki/Open_formula]

The truth of an open formula /may/ depend on the substitution of the free variables.

Some formulas are true or false due to their form, even though they contain free variables. For example: in classical logic, \( p \wedge (p \to q) \to q \) is true regardless of what \(p\) and \(q\) are. Another example: in classical logic, then \( p \wedge \neg p \) is false regardless of what \(p\) is.

If a formula's truth can be proven by virtue of its form alone, then it is true in all interpretations?

Classical logic assumes two things: material implication and the law of excluded middle.
** Mind Research Group
*** What is the relationship between mind and brain?
What is the [[file:philo.html][relationship between mind and brain]]?

Our brain is analog, but our mind is digital?
Is our brain analog or digital?
 [fn::https://medium.com/the-spike/brains-as-analog-computers-fa297021f935]
 [fn::https://www.forbes.com/sites/quora/2016/09/27/is-the-human-brain-analog-or-digital/]

Vsauce video "What is consciousness?"[fn::https://www.youtube.com/watch?v=qjfaoe847qQ]
** Security Research Group
*** Why does software have security holes?
Software has security holes because:
1. Languages makes it too hard to do the right thing.
2. Programmers are too lazy to do the right thing.
Authentication systems such as OAuth are too complex for programmers to use or understand.
Anything more than HTTP Basic Auth is too complex.
It sucks to write code for handling authentication.
How do we make a programming system such that handling authentication is not hard?
What is authentication and authorization?
*** Is it absurd to buy or build things that we hope to never have to use?
Insurance buyers hope to never have to use it, because having to use it means shit has happened.
We hope that shit doesn't happen.
When you buy a scissor, you expect to use it.
Insurance is the only thing that you buy but hope to never have to use it.

If I buy a gun, I hope to never have to use it.

We hope that we never have to use atomic bombs.

Having to use an insurance or a gun means that something bad has happened.
We don't want bad things to happen.

https://www.reddit.com/r/AskReddit/comments/3uc06v/what_is_something_youd_buy_but_hope_to_never_use/
*** Philosophy of security, trust, risk, and vulnerability
"To exploit someone is to take unfair advantage of them."\cite{sep-exploitation}
**** What is security?
**** What is vulnerability?
Trust is the assumption that others will not exploit our vulnerabilities.

Everything is vulnerable.
Vulnerabilities differ in their probability and the severity, and thus their expected damages.
We protect our houses with gates to deter thieves.
But we don't protect our houses against meteors.
Meteors do more damage than thieves, but meteors are so rare that the expected damage of thieves exceeds the expected damage of meteors.
We probabilistically reason that thieves are more risky than meteors.
**** What is risk?
Did Warren Buffett say that risk comes from not understanding what we are doing?
**** What is trust?

"A Taxonomy of Causes of Software Vulnerabilities in Internet Software"
https://pdfs.semanticscholar.org/5ec6/93950d1e6039e04a7b86a488e816ddcdd82e.pdf
"software developers are making the same mistakes over and over again"

* Computing Research Group
We aim to prescribe how computing should be done.
** Computing Theory Research Group
See [[file:compute.html]].

Intersecting topics: philosophy, mathematics, nature.

We dream of solving the P vs NP problem.

We follow recent advances by occasionally check Twitter and Semantic Scholar.

We craft the theoretical foundations of other subgroups.

One goal of computational complexity theory is to separate the complexity classes.

https://cstheory.stackexchange.com/questions/4489/should-experts-in-tcs-charge-money-to-read-proofs-that-p-np/4605

"Eight Signs A Claimed Pâ‰ NP Proof Is Wrong"
https://www.scottaaronson.com/blog/?p=458
*** What is fairness? How to divide a thing fairly?
https://en.wikipedia.org/wiki/Fair_division

From Wikipedia "Divide and choose"[fn::https://en.wikipedia.org/w/index.php?title=Divide_and_choose&oldid=853199297]
- "envy-free cake-cutting"
- "To an external viewer, the division might seem unfair, but to the two involved partners, the division is fair - no partner envies the other."

Thus, is fairness the absence of envy?
** Parsing Research Group
*** Parsing
We are looking for the best technique for parsing and unparsing formal languages,
because parsing is the common thing between programming language and publishing system, and we are looking for both.

How should we [[file:parse.html][parse]]?
While studying parsing, we had to understand Brzozowski quotient and set division,
so we wrote [[file:division.html][Generalizing division]].

"Parsing in Prolog"
http://www.cs.sfu.ca/~cameron/Teaching/383/DCG.html

"Jacc's LR-Parsing with Dynamic Operators"
"This part of the Jacc documentation explains the modifications we can make to a basic table-driven LR parser generator Ã  la yacc to accommodate support for Prolog's dynamic operators."
http://www.hassan-ait-kaci.net/hlt/doc/hlt/jaccdoc/dynamicLR.html
*** Handling left-recursion
Laurent and Mens 2016 \cite{laurent2016taming} (some emphasis ours):
"When a parser invokes itself (either directly or indirectly through intermediate parsers) without intervening state changes, the result is an infinite loop of parser invocations.
This is a well-known problem of top-down recursive parsers, called /left-recursion/.
Fortunately, it can be /mitigated/ as follows:
start by running the left-recursive parser /while failing all left-recursive invocations/, then re-run it, using the result of the initial parse as the result of all left-recursive invocations."
** Programming System Research Group
We dream of creating the best programming system.

We dream of writing translating meta-programs to free programmers from design mistakes such as Java.

We think we should program directly in the language of the mind.

We think programming languages need to interoperate.

We research programming languages.

See [[file:proglang.html]].

Ideas/findings:
- Language design should start from semantics.
- Names and referents should be separated (orthogonal).

A language is only as good as how it promotes communication.

What is communicated through a programming language?
- What things exist?
- How should they be manipulated?

A programming language must be ultimately translatable to the machine's primitives.

Wirth's "Algorithms + Data Structures = Programs"?[fn::https://en.wikipedia.org/wiki/Algorithms_%2B_Data_Structures_%3D_Programs]

We want something like this, to free the Java programmers:
"Java program representation and manipulation in Prolog"[fn::http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.158.4524&rep=rep1&type=pdf]

What?

"A Denotational Approach to Measuring Complexity in Functional Programs"
http://www.cs.cmu.edu/afs/cs/user/brookes/www/papers/CMU-CS-03-150.pdf

<2019-02-04>
Phil Freeman asked "Can someone explain why people object to thinking of types as sets? I mean, I normally donâ€™t, but it doesnâ€™t seem incorrect necessarily."
https://twitter.com/paf31/status/1092111216950992897
*** DSL in Java?
**** Some options for modeling the AST
***** Each class is an AST node type
#+BEGIN_EXAMPLE
final class Const { ... }
final class Add { ... }

Object eval (Exp x) {
  if (x instanceof Const) {
    return ((Const)x).value;
  }
  if (x instanceof Add) {
    final Add y = (Add) x;
    return (int)eval(y.left) + (int)eval(y.right);
  }
  throw new IllegalArgumentException("" + x);
}
#+END_EXAMPLE
***** One class Ast_node
#+BEGIN_EXAMPLE
final class Ast_node {
  static final int CONST = 0;
  static final int ADD = 1;
  // ...
  final int type;
  final Object[] arg;
  // ...
}
#+END_EXAMPLE

Then we need a way to pattern-match.
*** What language is like Prolog but has anonymous predicates and anonymous modules?
We are [[file:prolog.html][using Prolog]], but we are unsatisfied.
*** What should programming language be?
How should [[file:haskell.html][Haskell]] be improved?
- How do we use Haskell without fmap, ap, and other annoying syntactic baggages? How do we have Maybe(A) = A union {Nothing}? (The original question that started it all.)
- What does a set-theoretic type system look like? (The consequence of wanting Maybe(A) = A union {Nothing}.)
- What if the denotational semantics directly involve functors and monads?
- Why should we use that language / write programs that way?
- Is there an efficient implementation?

How should lambda calculus be implemented?
What is an optimal implementation?
*** Where should we publish our programming language research findings?
Should we publish at ICFP, PLDI, POPL, SPLASH/OOPSLA, or Salon des RefusÃ©s?

POPL has the "Off the beaten track".

I want maximum open access.
** Software Engineering Research Group
*** How should we build software?
Sometimes I think about forward software engineering,
such as [[file:softeng.html][making lasting software sooner]].
*** How should we specialize programmers? Business programmer and language programmer
We should not divide programmers into backend and frontend.
We should divide programmers into business programmer and language programmer.
The language programmer creates a DSL (domain-specific language).
The business programmer captures user requirements into a program (a specification) in that DSL.
The language programmer writes a metaprogram that translates
the business programmer's declarative program into something efficient.
*** How do we reverse-engineer software?
Sometimes I think about [[file:reveng.html][reverse software engineering]].

I wanted to automate stock trading with my broker which has a stock trading application written in Java 6.
Thus I wrote [[file:rejava.html][Reverse engineering the network protocol used by a Java desktop application]].
But now I think financial economy is just a big Ponzi scheme full of rent-seeking,
full of people who want to get a slice of the pie of real economy without growing the pie of real economy,
full of people who just want to extract value from society without creating value,
people who only take but don't give,
people who only shuffle money around.
*** Management, hiring
I tried to think about [[file:engman.html][managing software engineers]].

"When hiring senior engineers, youâ€™re not buying, youâ€™re selling." (Alexander von FranquÃ©)[fn::https://hiringengineersbook.com/post/trouble-hiring/]
*** What is software engineering?
Is software engineering engineering?
What is engineering?

If software is a pure art, then its construction shouldn't be time-limited.
A painter doesn't paint with deadlines.
A painting is finished when the painter feels it's finished.
However, a painter, when asked to paint a very specific painting, can estimate how many days it will take.
*** How should we build free/libre open-source software?
I am thinking about open-source.
I prefer cooperation to competition.
I write
[[file:opensrc.html][Making contributable open-source projects]],
[[file:community.html][Building online communities]].
I am thinking about maintaining open-source projects.
*** What?
I summarized the [[file:smf.html][Standard MIDI file format]].
I was thinking about making a digital audio workstation, but I changed my mind about music.

<2018-10-28> Systemd programmers are not competent enough for what they are doing.
 [fn::https://blog.erratasec.com/2018/10/systemd-is-bad-parsing-and-should-feel.html]
 [fn::https://www.reddit.com/r/programming/comments/9rtm1f/systemd_is_bad_parsing_and_should_feel_bad/]

Computers feel slow not because hardware sucks, but because programmers tell it to do stupid things.
Ever-stronger hardware lets more programmers get away with writing ever-shittier software.
*** Market information, compensation, salary, wage
<2019-01-15> Haskell tutelage $75/hour https://twitter.com/luqui/status/1084837990877327360

I thought about [[file:salary.html][software engineer salary]].
** User Experience Programming Research Group
We dream of demystifying and simplifying GUI programming.
What is the essence of GUI programming?
Can we do better than FRP (functional reactive programming)?
Can we do declarative GUI programming better than HTML+CSS?
If UX is the next UI, then is there UX programming instead of UI programming?
GUX instead of GUI?

** Gaming Research Group
We are interested in [[file:ps1.html][reverse-engineering PlayStation 1 3D games to control the camera]].
We are interested in reverse-engineering these (mostly PlayStation 1) games:
Street Fighter EX Plus Alpha, Fighting Layer, Tekken 3, Virtual Hiryu No Ken, Dead or Alive series, Virtua Fighter series, Bloody Roar series.

Products:
- (very far from finished) PS1 reverse-engineering tool written in Prolog.
  Should we also make a translator besides reverse-engineering?
** TODO What
Programming is computable mathematics?

https://en.wikipedia.org/wiki/Semantic_domain

"A programmable analog neural computer and simulator"
https://pdfs.semanticscholar.org/5f6b/579b1f4166ea536f5ed188e9976390729303.pdf

To rewrite a part of a program without introducing errors, we need to preserve the /meaning/ of the program, and thus we need a theory of semantics.

See also Rapaport 2015 section 7.2 ("What is computation?") from page 233.

See Rapaport 2015 page 267 about other computation models.

What can we get from this?
https://plato.stanford.edu/entries/computer-science/

<2014-05-07>
Reddit user TezlaKoil shows how to derive Russell's paradox in untyped lambda-calculus,
and shows the relationship between Russell's paradox and Curry's Y combinator.[fn::https://www.reddit.com/r/math/comments/24wk6f/are_there_other_alternatives_to_set_theory/chboelc]
* Sociotechnical Research Group
** Social Research Group
We aim to prescribe how humanity should proceed.
Intersecting topics: morality, ethics, anarchism, philosophy.

We dream of eliminating principal-agent problems.

See [[file:social.html]].

Products:
- Where should we live? [[file:social.html]]

Why do people give up their power so easily?

How do we live in a society whose morality clashes with our morality,
without demeaning the people that we think are immoral?
How do we live morally but without self-righteousness?

If we need to be evil to change something evil, should we be evil?

If we believe that power should be distributed,
but we need power to change the world,
should we temporarily (~ 100 years) centralize power on us?
Can we trust ourselves, as power tends to corrupt?

Philosophically-unsound legal fictions such as corporate personhood create unnecessary misery.

Litigation is part of the problem, not part of the solution.
Justice should at least be restorative.

Problem:
"Thatâ€™s why if your toaster explodes, you have to sue the company that makes the toaster.
You canâ€™t sue the companyâ€™s shareholders.
The company and its shareholders are distinct legal persons, with different legal rights and duties."[fn::https://www.sfchronicle.com/opinion/article/Corporate-personhood-actually-limits-12721448.php]

How would the combination of restorative justice and no-corporation handle exploding toasters?
What is the anarchist approach to litigating one who makes an exploding toaster that hurts someone else?

"If Corporations Are People, They Should Act Like It"[fn::https://www.theatlantic.com/politics/archive/2015/02/if-corporations-are-people-they-should-act-like-it/385034/]

Both governments and corporations are part of the problem.

Anarchy is a /privilege/.
Freedom is expensive.
** Capitalism does not benefit us; free trade does?
** Legal system is part of the problem.
Nobody knows all laws that are in effect.
Not the legislators.
Not the judges.
** Parallels between master-slave and lessor-lessee
"Slaves could not own property, but their masters often let them save up to purchase their freedom,[97] and records survive of slaves operating businesses by themselves,
making only a fixed tax-payment to their masters."[fn::https://en.wikipedia.org/w/index.php?title=Slavery_in_ancient_Greece&oldid=881609681]

That sounds very much like the relationship between a lessee (tenant/renter) and a lessor (landlord).
A lessee practically will never have enough money to buy the lessor's property;
the economic system guarantees that.
For example, in 2019, my neighbor is asking IDR 3 billion for his 72-m2 land and house on it.
A typical frugal man who saves IDR 3 million monthly salary will need to save for 83 years, assuming over-optimistically zero inflation.
He would have died 20 years before he had saved enough to buy the house!

In principle slavery has been abolished, but in practice the economic system guarantees that most people will forever live mediocre lives,
although in much better condition than that of ancient Roman slaves.
But we can do better.
** What is ownership?
** What is property?
** What is slavery?
Slavery is the treatment of human as non-human property.
Slavery is humans' owning humans.

Slavery violates the silver rule (do not do unto others what you do not want to be done unto yourself).
** Techno-Anarchy Research Group
We technologically actualize the dreams of the Social Research Group.

We research physics and distributed computing, as far as techno-anarchy is concerned.

We dream of creating technologies that make power centralization physically impractical.

We dream of a self-sufficient global anarchistic society where people freely do what they really want without harming others, where power is distributed.
But this dream may change.
We are trying to understand what anarchy is, and we disagree with some anarchists.

We prefer peaceful means.
We dislike revolutions.
We don't want to be in a revolution.
We prefer to convince people by reason than by force.

The system must not assume that humans are good.
The system must assume the worst of humans:
they are lazy, greedy, stupid, clever at gaming the system, and willing to cheat.
*** How do we liberate people with technology?
I am looking for a technology that empowers people and liberates people, a technology that makes power centralization impractical.
I thought I could change the world with politics, but now I think politics only wastes time,
and now I think technology is the only hope for making something in the physical-law layer to bypass the convoluted human-made-law layer.
I think law should be principle-based, and justice should be restorative.
I think the world needs only one law: Try not to harm others.
Nobody bothers to fix the broken political systems.
Nobody even bothers to think.
Political systems are too expensive to fix; it is much cheaper to scrap them.
*** What?
I [[file:usecom.html][use computers]].
I [[file:phone.html][buy a smartphone]] when my old smartphone becomes unusable.
I usually watch YouTube at 2x-3x speed; we can speed it up to 16x[fn::https://www.quora.com/Is-there-a-way-of-watching-YouTube-videos-at-higher-than-2x-speed].
*** Why don't users use distributed systems?
Users don't care; they want software to just work.[fn::"Decentralized systems will continue to lose to centralized systems until
there's a driver requiring decentralization to deliver a clearly superior consumer experience."
http://highscalability.com/blog/2018/8/13/what-do-you-believe-now-that-you-didnt-five-years-ago.html]

I find YaCy[fn::https://www.pcworld.com/article/245414/yacy_its_about_freedom_not_beating_google.html] unusable:
its search result relevance is too far behind Google.
YaCy-related things
 [fn::https://loklak.org/ Loklak Search - Distributed Open Source Search for Twitter and Social Media with Peer to Peer Technology]
 [fn::https://chat.susi.ai/ SUSI.AI Chat - Open Source Artificial Intelligence]
seem to also suffer from usability issues.

We should make a "freedom pack": an installer of essential free/libre open-source distributed-web applications.
The pack might contain things like matrix.org, riot.im.
But why stop there?
Why not make free/libre distributed operating system[fn::https://en.wikipedia.org/wiki/Distributed_operating_system] with all those goodies preinstalled?

Example of federated/decentralized social networks:
Kari Nordmann's comment[fn::https://medium.com/@rxpvh2000/where-are-the-programmers-who-give-a-shit-d27ad2ef24fc]:
"Explore federated (decentralized) social networks (Mastodon, diaspora*, Friendica, Hubzilla, GNU Social, Socialhome, Pleroma, GangGo)"
*** What are WhatsApp alternative?
<2019-01-31>
Facebook is merging WhatsApp?
We need an alternative with better privacy?
*** How do we increase homemadeability?
Why do we want homemadeability?
Because homemadeability promotes equality, liberty, and anarchism.
/Everything/ should be homemadeable, including nuclear bombs.
Only when everyone can produce everything will we have equality and liberty.

Why is not everything homemadeable?

Does it make sense to use solar power (1000 W/m2) for nuclear transmutation?
#+BEGIN_EXAMPLE
E = mc2
9e16 J = 1 kg
1 J = 1.11e-17 kg
#+END_EXAMPLE

No.

How do we make nuclear transmutation homemadeable?
What prevents energy from turning into matter?
What prevents matter from turning into energy?
What prevents matter from breaking down?
Why is matter stable?
What is matter?
What is energy?
A mathematical quantity?
*** How should we farm in cities?
I thought about [[file:subsist.html][starting a farm in the middle of Jakarta]],
but I put it on hold because I felt that the opportunity cost was too high.

The key to farming is to understand ecology, some botany (plant physiology and pathology), and nutrient cycle.

We should care more about phosphate run-off.
Phosphates are vital and non-renewable, like fossil fuel.
The bad news is that there is no cycle bringing back the phosphates from the sea to the land, unlike water with its hydrologic cycle.
*** Biohacking?
Biohacking?[fn::https://www.theguardian.com/science/2018/sep/21/extreme-biohacking-tech-guru-who-spent-250000-trying-to-live-for-ever-serge-faguet]

Genetics is the biggest factor in how far we can build our body.[fn::https://www.quora.com/Is-it-possible-for-a-skinny-guy-who-eats-trains-and-does-everything-right-to-get-Chris-Evans%E2%80%99-large-pecs-and-overall-muscular-look-If-so-how-long-Im-just-starting]
*** Theoretical physics, philosophy of physics
I am [[file:nature.html][trying to understand physics]].

Why is it hard to convert between matter and energy?
What does QFT say?
(Related: Why isn't everything homemadeable?)
*** Why does Bitcoin not work?
It's too slow.

It uses too much energy.

Satoshi assumes that the users are ideal anarchists.
Alas, the actual users are mostly mindless greedy humans who want to get money without working.
* Internal Research Group
We aim to make other research groups more efficient.
See [[file:meta.html]].

Topics: meta-research, writing, publishing.

Should we use WebCite[fn::https://www.webcitation.org/] for permalinking?
Should we embrace change?
** Notes to self
I need to rewrite these pages:
[[file:compsci.html][Computer science]],
[[file:math.html][Mathematics]],
[[file:modeldata.html][Modeling all data]].
[[file:politik_masjid.html][Politik masjid]],
[[file:jakarta.html][Living in Jakarta]].

I need to rewrite [[file:other.html][Unimportant content]].
It badly needs massive reorganization.
It is also a staging area, a queue, a scratchpad, for the things I shall process later.

Learning computer science?
 [fn::https://en.wikipedia.org/wiki/Computer_science]
 [fn::Map of Computer Science https://www.youtube.com/watch?v=SzJ46YA_RaA]

I should merge [[file:goal.html][Goals]] and [[file:meta.html][Meta]] (my thoughts about this website itself) into this page.

<2017-05-25>:
Thanks to [[http://davidensinger.com/][David Ensinger]]'s
[[http://davidensinger.com/2013/11/building-a-better-sitemap-xml-with-jekyll/][code]],
Jekyll can generate sitemap.xml without plugins.

<2018-12-25>
Migrating from Jekyll to Pandoc broke some things.
The generated page [[file:all.html][All pages]] does not include Pandoc-generated pages.
Sitemap.xml is also broken in the same way.
** Notes for future AI recommender
Dear machine, please find me people whose interests are similar to mine.
These are some example of such people, mostly professors or ex-professors.
I have not met these people.
I have only seen publicly available information.

Why is there no professor search engine?
Why is there no Semantic Web ontology for research interests?
Idea: We can query[fn::https://query.wikidata.org/] Wikidata to find professors whose research interests intersect ours.
<2019-01-08>
I tried that, but Wikidata does not have much data relevant to that query.
*** Intersecting in two topics
Prof. Sanjeev Arora[fn::https://www.cs.princeton.edu/~arora/] is a member of
Princeton theory-of-computation group[fn::http://theory.cs.princeton.edu/],
Princeton ML Theory Group[fn::http://mltheory.cs.princeton.edu/],
and Arora Research Group[fn::http://unsupervised.cs.princeton.edu/].

https://www.quora.com/How-good-is-Princeton-at-machine-learning

https://www.math.ias.edu/theoretical_machine_learning
*** Intersecting in one topic
**** Computational complexity theory
Prof. Neil Immerman[fn::https://www.cics.umass.edu/faculty/directory/immerman_neil][fn::https://people.cs.umass.edu/~immerman/]
wrote the "Descriptive complexity" book[fn::www.cs.umass.edu/~immerman/book/descriptiveComplexity.html] published in 1999.
He is also a member of UMass CS Theory Group[fn::http://theory.cs.umass.edu/people.html] which has interesting theoretical researches.

https://www.quora.com/Which-professors-research-groups-are-working-on-mathematical-theoretical-understanding-of-deep-learning

Prof. Oded Goldreich[fn::http://www.wisdom.weizmann.ac.il/~/oded/]

Prof. Eric Allender[fn::https://www.cs.rutgers.edu/faculty/eric-allender]
**** Programming language theory
Prof. Philip Wadler[fn::http://homepages.inf.ed.ac.uk/wadler/]

Prof. Simon Peyton--Jones[fn::https://www.microsoft.com/en-us/research/people/simonpj/?from=http%3A%2F%2Fresearch.microsoft.com%2Fen-us%2Fpeople%2Fsimonpj]
**** Artificial intelligence and machine learning
Prof. JÃ¼rgen Schmidhuber[fn::http://people.idsia.ch/~juergen/].

Prof. Elad Hazan[fn::https://www.cs.princeton.edu/courses/archive/spring16/cos511/]
**** Philosophy of computer science
Prof. William Rapaport[fn::http://www.buffalo.edu/cas/philosophy/faculty/emeriti/rapaport.html].

Prof. Brian Cantwell Smith[fn::https://ischool.utoronto.ca/profile/brian-cantwell-smith/].
** Which inquiries intersect?
My inquiries often intersect.
[[file:philo.html]] and [[file:intelligence.html]] intersect in modeling, mind, consciousness.
[[file:intelligence.html]] and [[file:social.html]] intersect in trust.
Philosophy of mind + logic meet software engineering + Prolog at "formal concept analysis"[fn::https://en.wikipedia.org/wiki/Formal_concept_analysis].
Philosophy, software engineering, and business modeling meet at "triune continuum paradigm"[fn::"The triune continuum paradigm is based on the three theories:
on Tarski's theory of truth, on Russell's theory of types and on the theory of triune continuum."
https://en.wikipedia.org/wiki/Triune_continuum_paradigm].
I disclaim any understanding.
** Self-research
PhD interview questions[fn::https://www.findaphd.com/advice/finding/phd-interview-questions.aspx][fn::https://academia.stackexchange.com/questions/101803/answering-the-why-do-you-want-to-do-a-phd-question]
*** What are my strengths?
I try to be rational.
I readily change my beliefs when I find conflicting evidences.
*** What are my weaknesses?
I have a bad relationship with time.
I have difficulty sleeping and waking up.
I disregard deadlines.
I'm slow.
I suck at races.

I don't act without reason.
I am prone to overthinking.
I am selfish and stubborn.
I see things from my point of view.
It takes a lot of effort to convince me.
I should not be put in a team that I do not believe in.
I will not do what I don't believe is important for my goal.
You will find me useless when you want me to do something that I don't believe is important for my goal, no matter how important it is to you;
in such situation I will be totally uncooperative.
I don't pretend to care.

I am non-conformist.
I put reason above norms, conventions, and authorities.
I hate ceremonies.
I risk making cultural mistakes.
My candid may offend people.

I'm bad at socializing, but I'm trying to change this.
I suck at caring.
I suck at pretending to care.
I'm learning to be the first to greet.

I hate crowds.
I'm afraid to be in crowds.
I'm paranoid and untrusting.

I am not loyal.

I have strong opinions on everything.
*** What am I no longer interested in?
I was once fleetingly interested in these things:
[[file:art.html][Art]],
[[file:game.html][Game]].

I occasionally played weiqi[fn::Weiqi is also known as go, igo, baduk. https://en.wikipedia.org/wiki/Go_(game)],
but after AlphaGo[fn::https://en.wikipedia.org/wiki/AlphaGo] beat[fn::https://en.wikipedia.org/wiki/AlphaGo_versus_Lee_Sedol] Lee Sedol, I abandoned weiqi and never looked back.
I occasionally played chess, before Deep Blue beat Kasparov[fn::https://en.wikipedia.org/wiki/Deep_Blue_versus_Garry_Kasparov].
I occasionally played poker, before machines took over[fn::https://www.theguardian.com/technology/2017/jan/30/libratus-poker-artificial-intelligence-professional-human-players-competition].
Now I think that games only waste time:
I see no point in doing something that machines can do better than I do.
*** What musical instruments do I play?
I played piano in the band [[file:nomads.html][The Nomads]] (an Indonesian band, not the Swedish band).
However, I quit being a performer on 2018-12-23, less than a year after joining the band, because I hate inhaling cigarette smoke in venues and I hate carrying pianos to venues.
I am no longer a pianist.
I am now a composer with an asset mindset.
*** What things do I find entertaining?
I collect [[file:entertain.html][entertainments found on the Internet]].

Why are lyrebirds entertaining?
Lyrebird can mimic sounds uncannily.
Laser guns, drills, hammers, camera shutters.
** How should we meet?
This is the way we should meet.
Ban small talk.
Impose some but minimal structure.
See Marcel Schwantes article[fn::https://www.inc.com/marcel-schwantes/13-genius-questions-most-interesting-people-ask-to-start-great-conversations.html].
** TODO What?
https://medium.com/@write4research/why-do-academics-and-phders-carefully-choose-useless-titles-for-articles-and-chapters-518f02a2ecbb

https://medium.com/@write4research/top-ten-questions-to-ask-about-your-chapter-start-32848d924953
** Should we create our own publishing system?
These may be strong reasons for rolling my own publication system in Prolog:
- (WONTFIX) Org Mode Reader duplicates footnotes https://github.com/jgm/pandoc/issues/5196
- (workaround available) HTML writer does not separate adjacent footnote references https://github.com/jgm/pandoc/issues/5197
- amsthm, theorem/lemma/definition/proof
- we want by default #+OPTIONS: ^:nil
- multi-authorship?
- https://github.com/jgm/pandoc/issues/1608
- LaTeX command argument, hard to fix (practically wontfix) https://github.com/jgm/pandoc/issues/5261 https://github.com/jgm/pandoc/issues/3047

As I age, I learn that a hack/quick-fix/duct-tape only leads to misery, regret, and self-hate.

However, the last time I tried to create my own publishing system was a big XML disaster.
* Art Research Group
** Music Research Group
We aim to prescribe how we should make and use music.
See [[file:music.html]].

We also research about music education, how to teach music.
*** Composing for beginners
Matthew Hindson:
Fast music is easier than slow music
because beginners can't produce good long tone.[fn::http://hindson.com.au/info/writing-for-school-and-amateur-orchestras-2006-toan-conference-presentation/]
*** How should we subdivide beats?
Subdivide each beat into 2: TOOK-tuck (TUK-tak).

Subdivide each beat into 4: TOOK-uh-tuck-uh (TUK-ke-tak-ke).
** How should we care for ourselves?
See [[file:groom.html]].
** Stories, twists, surprises, plots
Prabu Salya from Mahabharata
* Contact
To ask questions, suggest corrections, or add something, do any of these:

- Leave a Disqus comment in the related page.
- [[https://github.com/edom/edom.github.io/issues][Open an issue on GitHub]].
- Leave something at [[https://twitter.com/ErikDominikus][Twitter:ErikDominikus]].

If you know me personally, then you may send me a message at [[https://www.linkedin.com/in/erikdominikus/][Linkedin]].

If you are in Jakarta, we may meet in some meetups.

I think I should create a second email address.
* Bibliography
