#+TITLE: Erik Dominikus Research Group
#+DATE: 2017-05-20 00:00:00 +0700
#+PERMALINK: /index.html
#+MATHJAX: true
#+OPTIONS: ^:nil
* About the group and this website
** What is in this website?
This website contains questions that we think should be answered.

This page (the home page) can be thought as a table of contents.
** Who are the group members?
- Erik Dominikus

We are not a formal organization.
We are just a bunch of people who think similarly,
and we don't know what to call ourselves.
The group may change name later.
** Who is Erik Dominikus?
I am an independent[fn::https://en.wikipedia.org/wiki/Independent_scientist] researcher from Indonesia,
with too many interests, mostly theoretical,
because theoretical research is low-cost and can be done at home[fn::https://en.wikipedia.org/wiki/Armchair_theorizing],
because I don't have the resources for experimental research.
Most of my writings involve applied analytic philosophy, mathematics, and computers.
(Applied analytic philosophy is the careful usage of words to discover the essence of things.)

My last formal education degree, if you care, is a Sarjana Ilmu Komputer[fn::https://en.wikipedia.org/wiki/Bachelor_of_Computer_Science] degree bestowed in 2011 by the
Fakultas Ilmu Komputer[fn::https://www.cs.ui.ac.id/] of Universitas Indonesia[fn::https://www.ui.ac.id/] for four years of undergraduate education.
** What are the group's goals?
See the later sections describing the subgroups.
We are not confident that we can achieve those goals, but we think those goals are worthy of pursuit.
** Is the group for profit?
No.
We are for truth and meaning, not for profit.
** Disclaimers
/We may err./
Read cautiously.
Compare with other independent sources.
Do not trust us without thinking for yourself.
Use your own judgement.

/We are not responsible for what other people write in their comments,/ but we can remove comments from our website.
People are free to say whatever they want, and people are free to disagree with whatever others say,
as long as they do that in a civilized manner.

/We may change./
We are not attached to our beliefs.
Things we wrote in the past should not be solely used to judge our present self.

Most pages are messy drafts.
URLs may change.

If you have good eyesight, you may want to zoom out by pressing Control-minus.
The fonts may be too big.
* Philosophy Research Group
We do philosophical analysis to support other groups.

In [[file:philo.html]] we analyze fundamental concepts.
To understand causation is to construct an internal causal model of the reality that we perceive?
** Language Research Group
The [[file:language.html][Language Research Group]] defines "language" for the Programming System Research Group.
A programming language is a language that is used for programming.
We do not dive too deep into linguistics.
We only care about its intersection with computing.
** Mind Research Group
The [[file:mind.html][Mind Research Group]] tries to define "mind".
It analyzes the relationship between mind and brain.
It compares mental phenomena such as fantasy, illusion, hallucination, etc.
** Security Research Group
*** Why does software have security holes?
Software has security holes because:
1. Languages makes it too hard to do the right thing.
2. Programmers are too lazy to do the right thing.
Authentication systems such as OAuth are too complex for programmers to use or understand.
Anything more than HTTP Basic Auth is too complex.
It sucks to write code for handling authentication.
How do we make a programming system such that handling authentication is not hard?
What is authentication and authorization?
*** Is it absurd to buy or build things that we hope to never have to use?
Insurance buyers hope to never have to use it, because having to use it means shit has happened.
We hope that shit doesn't happen.
When you buy a scissor, you expect to use it.
Insurance is the only thing that you buy but hope to never have to use it.

If I buy a gun, I hope to never have to use it.

If I buy a fire extinguisher, I hope to never have to use it.
Is it absurd for me to buy a fire extinguisher?

We hope that we never have to use atomic bombs.

Having to use an insurance or a gun means that something bad has happened.
We don't want bad things to happen.

https://www.reddit.com/r/AskReddit/comments/3uc06v/what_is_something_youd_buy_but_hope_to_never_use/
*** Philosophy of security, trust, risk, and vulnerability
"To exploit someone is to take unfair advantage of them."\cite{sep-exploitation}
**** What is security?
**** What is vulnerability?
Trust is the assumption that others will not exploit our vulnerabilities.

Everything is vulnerable.
Vulnerabilities differ in their probability and the severity, and thus their expected damages.
We protect our houses with gates to deter thieves.
But we don't protect our houses against meteors.
Meteors do more damage than thieves, but meteors are so rare that the expected damage of thieves exceeds the expected damage of meteors.
We probabilistically reason that thieves are more risky than meteors.
**** What is risk?
Did Warren Buffett say that risk comes from not understanding what we are doing?
**** What is trust?

"A Taxonomy of Causes of Software Vulnerabilities in Internet Software"
https://pdfs.semanticscholar.org/5ec6/93950d1e6039e04a7b86a488e816ddcdd82e.pdf
"software developers are making the same mistakes over and over again"
** Social Research Group
The [[file:social.html][Social Research Group]] aims to prescribe how humanity should proceed.
Intersecting topics: morality, ethics, anarchism, philosophy.

We dream of eliminating principal-agent problems.

Products:
- Where should we live? [[file:social.html]]
** Art Research Group
The [[file:art.html][Art Research Group]]?
*** Music Research Group
The [[file:music.html][Music Research Group]] aims to prescribe how we should make and use music.
We also research about music education, how to teach music.
*** How should we care for ourselves?
See [[file:groom.html]].
*** Stories, twists, surprises, plots
Prabu Salya from Mahabharata
* Computing Research Group
We aim to prescribe how computing should be done.
** Computing Theory Research Group
See [[file:compute.html]].

Intersecting topics: philosophy, mathematics, nature.

We dream of solving the P vs NP problem.

We follow recent advances by occasionally check Twitter and Semantic Scholar.

We craft the theoretical foundations of other subgroups.

One goal of computational complexity theory is to separate the complexity classes.

https://cstheory.stackexchange.com/questions/4489/should-experts-in-tcs-charge-money-to-read-proofs-that-p-np/4605

"Eight Signs A Claimed P≠NP Proof Is Wrong"
https://www.scottaaronson.com/blog/?p=458
** Parsing Research Group
The [[file:parse.html][Parsing Research Group]] is looking for the best technique for parsing and unparsing formal languages,
because parsing is the common thing between programming language and publishing system, and we want both.
While studying parsing, we had to understand Brzozowski quotient and set division,
so we wrote [[file:division.html][Generalizing division]].
** Programming System Research Group
We dream of creating the best programming system.

We dream of writing translating meta-programs to free programmers from design mistakes such as Java.

We think we should program directly in the language of the mind.

We think programming languages need to interoperate.

We research programming languages.

The [[file:proglang.html][Programming Language Research Group]] aims to create the best programming language.

Ideas/findings:
- Language design should start from semantics.
- Names and referents should be separated (orthogonal).

A language is only as good as how it promotes communication.

What is communicated through a programming language?
Two things: what things exist, and how those things should be manipulated.

A programming language must be ultimately translatable to the machine's primitives.

Wirth's "Algorithms + Data Structures = Programs"?[fn::https://en.wikipedia.org/wiki/Algorithms_%2B_Data_Structures_%3D_Programs]

We want something like this, to free the Java programmers:
"Java program representation and manipulation in Prolog"[fn::http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.158.4524&rep=rep1&type=pdf]

What?

"A Denotational Approach to Measuring Complexity in Functional Programs"
http://www.cs.cmu.edu/afs/cs/user/brookes/www/papers/CMU-CS-03-150.pdf

<2019-02-04>
Phil Freeman asked "Can someone explain why people object to thinking of types as sets? I mean, I normally don’t, but it doesn’t seem incorrect necessarily."
https://twitter.com/paf31/status/1092111216950992897

Barbara Liskov: "Our compilers today are not powerful enough to support or enforce semantic constraints.",
answering question "Do you think that in those examples it’s worth having a refined subtype to explicitly encode the difference between the LIFO and FIFO semantics
as part of a typing system or that would be something that would be annotated externally to the type system, like semantic constraints?"[fn::https://www.infoq.com/interviews/barbara-liskov]

Rascal MPL[fn::https://www.rascal-mpl.org/] vs Jetbrains MPS?
*** DSL in Java?
**** Some options for modeling the AST
***** Each class is an AST node type
#+BEGIN_EXAMPLE
final class Const { ... }
final class Add { ... }

Object eval (Exp x) {
  if (x instanceof Const) {
    return ((Const)x).value;
  }
  if (x instanceof Add) {
    final Add y = (Add) x;
    return (int)eval(y.left) + (int)eval(y.right);
  }
  throw new IllegalArgumentException("" + x);
}
#+END_EXAMPLE
***** One class Ast_node
#+BEGIN_EXAMPLE
final class Ast_node {
  static final int CONST = 0;
  static final int ADD = 1;
  // ...
  final int type;
  final Object[] arg;
  // ...
}
#+END_EXAMPLE

Then we need a way to pattern-match.
*** What language is like Prolog but has anonymous predicates and anonymous modules?
We are [[file:prolog.html][using Prolog]], but we are unsatisfied.
*** What should programming language be?
How should [[file:haskell.html][Haskell]] be improved?
- How do we use Haskell without fmap, ap, and other annoying syntactic baggages? How do we have Maybe(A) = A union {Nothing}? (The original question that started it all.)
- What does a set-theoretic type system look like? (The consequence of wanting Maybe(A) = A union {Nothing}.)
- What if the denotational semantics directly involve functors and monads?
- Why should we use that language / write programs that way?
- Is there an efficient implementation?

How should lambda calculus be implemented?
What is an optimal implementation?
*** Where should we publish our programming language research findings?
Should we publish at ICFP, PLDI, POPL, SPLASH/OOPSLA, or Salon des Refusés?

POPL has the "Off the beaten track".

I want maximum open access.
*** TODO What
Programming is computable mathematics?

https://en.wikipedia.org/wiki/Semantic_domain

"A programmable analog neural computer and simulator"
https://pdfs.semanticscholar.org/5f6b/579b1f4166ea536f5ed188e9976390729303.pdf

To rewrite a part of a program without introducing errors, we need to preserve the /meaning/ of the program, and thus we need a theory of semantics.

See also Rapaport 2015 section 7.2 ("What is computation?") from page 233.

See Rapaport 2015 page 267 about other computation models.

What can we get from this?
https://plato.stanford.edu/entries/computer-science/

<2014-05-07>
Reddit user TezlaKoil shows how to derive Russell's paradox in untyped lambda-calculus,
and shows the relationship between Russell's paradox and Curry's Y combinator.[fn::https://www.reddit.com/r/math/comments/24wk6f/are_there_other_alternatives_to_set_theory/chboelc]
** Software Engineering Research Group
The [[file:softeng.html][Software Engineering Research Group]] researches forward software engineering.
How should we build software?
How can we make more lasting software sooner?

We also research some reverse software engineering.
*** Rant?
<2018-10-28> Systemd programmers are not competent enough for what they are doing.
 [fn::https://blog.erratasec.com/2018/10/systemd-is-bad-parsing-and-should-feel.html]
 [fn::https://www.reddit.com/r/programming/comments/9rtm1f/systemd_is_bad_parsing_and_should_feel_bad/]

Computers feel slow not because hardware sucks, but because programmers tell it to do stupid things.
Ever-stronger hardware lets more programmers get away with writing ever-shittier software.
*** How should we build free/libre open-source software?
I am thinking about open-source.
I prefer cooperation to competition.
I write
[[file:opensrc.html][Making contributable open-source projects]],
[[file:community.html][Building online communities]].
I am thinking about maintaining open-source projects.
*** Management, hiring?
I tried to think about [[file:engman.html][managing software engineers]].

"When hiring senior engineers, you’re not buying, you’re selling." (Alexander von Franqué)[fn::https://hiringengineersbook.com/post/trouble-hiring/]
*** How do we reverse-engineer software?
Sometimes I think about [[file:reveng.html][reverse software engineering]].

I wanted to automate stock trading with my broker which has a stock trading application written in Java 6.
Thus I wrote [[file:rejava.html][Reverse engineering the network protocol used by a Java desktop application]].
But now I think financial economy is just a big Ponzi scheme full of rent-seeking,
full of people who want to get a slice of the pie of real economy without growing the pie of real economy,
full of people who just want to extract value from society without creating value,
people who only take but don't give,
people who only shuffle money around.
*** Market information, compensation, salary, wage
<2019-01-15> Haskell tutelage $75/hour https://twitter.com/luqui/status/1084837990877327360

I thought about [[file:salary.html][software engineer salary]].
** User Experience Programming Research Group
We dream of demystifying and simplifying GUI programming.
What is the essence of GUI programming?
Can we do better than FRP (functional reactive programming)?
Can we do declarative GUI programming better than HTML+CSS?
If UX is the next UI, then is there UX programming instead of UI programming?
GUX instead of GUI?

How do we formalize user experience?
How do we program user experience?
Can a programming language facilitate good programmer experience and good end-user experience?
** Gaming Research Group
The [[file:game.html][Gaming Research Group]] is interested in [[file:ps1.html][reverse-engineering PlayStation 1 3D games to control the camera]].
We are interested in reverse-engineering these (mostly PlayStation 1) games:
Street Fighter EX Plus Alpha, Fighting Layer, Tekken 3, Virtual Hiryu No Ken, Dead or Alive series, Virtua Fighter series, Bloody Roar series.

"Using Logic Programming to Recover C++ Classes and Methods from Compiled Executables. They use XSB Prolog"
 [fn::https://twitter.com/r_Prolog/status/1092721329596444672]
 [fn::https://www.reddit.com/r/prolog/comments/ancj74/using_logic_programming_to_recover_c_classes_and/]

Products:
- (very far from finished) PS1 reverse-engineering tool written in Prolog.
  Should we also make a translator besides reverse-engineering?
** Music Technology Research Group?
I summarized the [[file:smf.html][Standard MIDI file format]].
I was thinking about making a digital audio workstation, but I changed my mind about music.
* Techno-Anarchy Research Group
The [[file:tech.html][Techno-Anarchy Research Group]] technologically actualize the dreams of the Social Research Group.

We research physics and distributed computing, but only insofar as they promote techno-anarchy.

We dream of creating technologies that preclude power centralization, or, at least prevent or impede it,
in a physical way that precludes human-made law from doing anything about it.
For example, government officials are not going to nuke 7 billion disobedient people, because they will kill themselves if they do that.
For example, no legislator can make properly-used one-time pads breakable, because such breaking is a mathematical/physical impossibility.
Human law is not the supreme law.
Natural law is the supreme law.

The system must assume the worst of humans:
they are lazy, greedy, stupid, clever at gaming the system, willing to cheat,
and short-sighted (bad at thinking about long chains of causes and long-term causes).

We dream of a self-sufficient global sustainable anarchistic society where people freely do what they really want without harming others, where power is distributed.
But this dream may change.
We are trying to understand what anarchy is, and we disagree with some anarchists.
A state has good and bad things.
The question is: What is the price of having states, and is it too high a price to pay?

We prefer peaceful means.
We dislike revolutions.
We don't want to be in a revolution.
We want to convince people by reason, not by force.
* Internal Research Group
The [[file:meta.html][Internal Research Group]] aims to make other research groups more efficient.

Topics: meta-research, writing, publishing.

Should we use WebCite[fn::https://www.webcitation.org/] for permalinking?
Should we embrace change instead?

How should we use ResearchGate[fn::https://www.researchgate.net/]?

Jürgen Schmidhuber: "Switzerland is the world's leading science nation."
 [fn::http://people.idsia.ch/~juergen/erc2017.html]
 [fn::http://people.idsia.ch/~juergen/switzerland.html]
** Notes to self
I need to rewrite these pages:
[[file:compsci.html][Computer science]],
[[file:math.html][Mathematics]],
[[file:modeldata.html][Modeling all data]].
[[file:politik_masjid.html][Politik masjid]],
[[file:jakarta.html][Living in Jakarta]].

I need to rewrite [[file:other.html][Unimportant content]].
It badly needs massive reorganization.
It is also a staging area, a queue, a scratchpad, for the things I shall process later.

Learning computer science?
 [fn::https://en.wikipedia.org/wiki/Computer_science]
 [fn::Map of Computer Science https://www.youtube.com/watch?v=SzJ46YA_RaA]

I should merge [[file:goal.html][Goals]] and [[file:meta.html][Meta]] (my thoughts about this website itself) into this page.

<2017-05-25>:
Thanks to [[http://davidensinger.com/][David Ensinger]]'s
[[http://davidensinger.com/2013/11/building-a-better-sitemap-xml-with-jekyll/][code]],
Jekyll can generate sitemap.xml without plugins.

<2018-12-25>
Migrating from Jekyll to Pandoc broke some things.
The generated page [[file:all.html][All pages]] does not include Pandoc-generated pages.
Sitemap.xml is also broken in the same way.
** Notes for future AI recommender
Dear machine, please find me people whose interests are similar to mine.
These are some example of such people, mostly professors or ex-professors.
I have not met these people.
I have only seen publicly available information.

Why is there no professor search engine?
Why is there no Semantic Web ontology for research interests?
Idea: We can query[fn::https://query.wikidata.org/] Wikidata to find professors whose research interests intersect ours.
<2019-01-08>
I tried that, but Wikidata does not have much data relevant to that query.
*** Intersecting in two topics
Prof. Sanjeev Arora[fn::https://www.cs.princeton.edu/~arora/] is a member of
Princeton theory-of-computation group[fn::http://theory.cs.princeton.edu/],
Princeton ML Theory Group[fn::http://mltheory.cs.princeton.edu/],
and Arora Research Group[fn::http://unsupervised.cs.princeton.edu/].

https://www.quora.com/How-good-is-Princeton-at-machine-learning

https://www.math.ias.edu/theoretical_machine_learning
*** Intersecting in one topic
**** Computational complexity theory
Prof. Neil Immerman[fn::https://www.cics.umass.edu/faculty/directory/immerman_neil][fn::https://people.cs.umass.edu/~immerman/]
wrote the "Descriptive complexity" book[fn::www.cs.umass.edu/~immerman/book/descriptiveComplexity.html] published in 1999.
He is also a member of UMass CS Theory Group[fn::http://theory.cs.umass.edu/people.html] which has interesting theoretical researches.

https://www.quora.com/Which-professors-research-groups-are-working-on-mathematical-theoretical-understanding-of-deep-learning

Prof. Oded Goldreich[fn::http://www.wisdom.weizmann.ac.il/~/oded/]

Prof. Eric Allender[fn::https://www.cs.rutgers.edu/faculty/eric-allender]
**** Programming language theory
Prof. Philip Wadler[fn::http://homepages.inf.ed.ac.uk/wadler/]

Prof. Simon Peyton--Jones[fn::https://www.microsoft.com/en-us/research/people/simonpj/?from=http%3A%2F%2Fresearch.microsoft.com%2Fen-us%2Fpeople%2Fsimonpj]
**** Artificial intelligence and machine learning
Prof. Jürgen Schmidhuber[fn::http://people.idsia.ch/~juergen/].

Prof. Elad Hazan[fn::https://www.cs.princeton.edu/courses/archive/spring16/cos511/]
**** Philosophy of computer science
Prof. William Rapaport[fn::http://www.buffalo.edu/cas/philosophy/faculty/emeriti/rapaport.html].

Prof. Brian Cantwell Smith[fn::https://ischool.utoronto.ca/profile/brian-cantwell-smith/].
** Which inquiries intersect?
My inquiries often intersect.
[[file:philo.html]] and [[file:intelligence.html]] intersect in modeling, mind, consciousness.
[[file:intelligence.html]] and [[file:social.html]] intersect in trust.
Philosophy of mind + logic meet software engineering + Prolog at "formal concept analysis"[fn::https://en.wikipedia.org/wiki/Formal_concept_analysis].
Philosophy, software engineering, and business modeling meet at "triune continuum paradigm"[fn::"The triune continuum paradigm is based on the three theories:
on Tarski's theory of truth, on Russell's theory of types and on the theory of triune continuum."
https://en.wikipedia.org/wiki/Triune_continuum_paradigm].
I disclaim any understanding.
* Contact
To ask questions, suggest corrections, or add something, do any of these:

- Leave a Disqus comment in the related page.
- [[https://github.com/edom/edom.github.io/issues][Open an issue on GitHub]].
- Leave something at [[https://twitter.com/ErikDominikus][Twitter:ErikDominikus]].

If you know me personally, then you may send me a message at [[https://www.linkedin.com/in/erikdominikus/][Linkedin]].

If you are in Jakarta, we may meet in some meetups.

I think I should create a second email address.
* Bibliography
